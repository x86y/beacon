name: Release
on: [push]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            build/obj
            build/obj2
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust Windows target
        run: |
          rustup update && rustup target add x86_64-pc-windows-gnu
          sudo apt-get update
          sudo apt-get install binutils-mingw-w64 mingw-w64
      - name: Build bqn shared lib and wasm file
        run: |
          git clone https://github.com/dzaima/CBQN
          cd CBQN
          FFI=0 make shared-o3 notui=1
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz
          tar xvf wasi-sdk-20.0-linux.tar.gz
          FFI=0 make wasi-reactor-o3 notui=1 CC=./wasi-sdk-20.0/bin/clang
          mv libcbqn.so BQN.wasm ../
      - name: Build Linux
        run: |
          RUSTFLAGS="-L ${{ github.workspace }}" LD_LIBRARY_PATH="${{ github.workspace }}/libcbqn.so -C strip=symbols" cargo build --release
          mv target/release/beacon ./beacon_x86_64-unknown-linux-gnu
      - name: Build Windows
        run: |
          RUSTFLAGS='-C strip=symbols' BQN_WASM=${{ github.workspace }}/BQN.wasm cargo build --release --target x86_64-pc-windows-gnu --no-default-features --features=bqnwasm
          mv target/x86_64-pc-windows-gnu/release/beacon.exe ./beacon_x86_64-pc-windows-gnu.exe
          ./beacon_x86_64-pc-windows-gnu.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            beacon_x86_64-unknown-linux-gnu
            beacon_x86_64-pc-windows-gnu.exe

  macos:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            build/obj
            build/obj2
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust ARM target
        run: |
          rustup update && rustup target add aarch64-apple-darwin
          cargo install cargo-bundle || echo "already installed"
      - name: Build x86
        run: |
          git clone https://github.com/dzaima/CBQN
          cd CBQN
          FFI=0 make shared-o3 notui=1
          mv libcbqn.dylib ..
          cd ..
          RUSTFLAGS="-L ${{ github.workspace }}" LD_LIBRARY_PATH="${{ github.workspace }}/libcbqn_86.dylib" cargo bundle --release 
      - name: Build ARM
        run: |
          rm libcbqn.dylib
          cd CBQN
          FFI=0 CCFLAGS=--target=aarch64-apple-darwin make shared-o3 target_arch=aarch64 notui=1
          mv libcbqn.dylib ..
          cd ..
          RUSTFLAGS="-L ${{ github.workspace }}" LD_LIBRARY_PATH="${{ github.workspace }}/libcbqn_arm.dylib" cargo bundle --release --target=aarch64-apple-darwin
      - name: Create DMG
        run: |
          git clone https://github.com/create-dmg/create-dmg
          chmod u+x create-dmg/create-dmg
          ./create-dmg/create-dmg Beacon_aarch64-apple-darwin.dmg target/aarch64-apple-darwin/release/bundle/osx/Beacon.app
          ./create-dmg/create-dmg Beacon_x86_64-apple-darwin.dmg target/release/bundle/osx/Beacon.app
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            Beacon_aarch64-apple-darwin.dmg
            Beacon_x86_64-apple-darwin.dmg
